name: Trigger GCP build

env:
  GCP_API_KEY: ${{ secrets.GCP_API_KEY }}
  BUILD_TRIGGER_SECRET: ${{ secrets.BUILD_TRIGGER_SECRET }}

on:
  push:
    branches:
      - "gcp-initial"
  workflow_dispatch: {}

jobs:
  trigger-build:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Trigger GCP build
        run: curl -X POST -H "application/json" "https://cloudbuild.googleapis.com/v1/projects/ivan-legend-build-project/triggers/parallel-legend-engine-build-webhook:webhook?key=${GCP_API_KEY}&secret=${BUILD_TRIGGER_SECRET}" -d "{}"

      - name: GCP auth
        uses: google-github-actions/auth@v0
        with:
          workload_identity_provider: 'projects/541264347167/locations/global/workloadIdentityPools/legend-engine-trigger-pool/providers/github-provider'
          service_account: 'legend-engine-trigger@ivan-legend-build-project.iam.gserviceaccount.com'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Get last build ID
        run: echo "GCP_BUILD_ID=$(gcloud builds list --filter substitutions.TRIGGER_NAME='parallel-legend-engine-build-webhook' --sort-by create_time --limit 1 --format='value(id)')" >> $GITHUB_ENV

      - name: Stream build logs
        run: gcloud builds log --stream '${{ env.GCP_BUILD_ID }}'

      - name: Report GCP build status
        run: |
          buildStatus=$(gcloud builds list --filter id='${{ env.GCP_BUILD_ID }}' --format='value(status)')
          
          echo "Logs streaming ended with the build having a status of '${buildStatus}'"
          echo "Check the full build logs at: https://storage.googleapis.com/legend-engine-logs/log-${{ env.GCP_BUILD_ID }}.txt"
          echo "All GCP build logs are available here: https://console.cloud.google.com/storage/browser/legend-engine-logs"
          
          if [ $buildStatus != "SUCCESS" ]; then
            exit 1
          fi
